task testCommit(type: Test, description: 'Run commit test pack') {
    testClassesDir = sourceSets.test.output.classesDir
    classpath = sourceSets.test.runtimeClasspath
}

task testAcceptance(type: Test, description: 'Run acceptance test pack') {
    testClassesDir = sourceSets.testAcceptance.output.classesDir
    classpath = sourceSets.testAcceptance.runtimeClasspath
}

task testPerformance(type: Test, description: 'Run performance test pack') {
    testClassesDir = sourceSets.testPerformance.output.classesDir
    classpath = sourceSets.testPerformance.runtimeClasspath
}

task report(type: Copy, description: 'Publish tests report to web server') {
    from "$buildDir/reports"
    into "$reportsTargetDir"
}

gatling {
    toolVersion = '2.2.0'
    jvmArgs = [ '-server', '-Xms128M', '-Xmx128M' ]
}

task gatlingw(dependsOn: 'gatling') << {
    println 'Running gatling wrapper task'
}

task simulation(dependsOn: ['startServer', 'gatlingw', 'stopServer']) << {
    
}

gatlingw.shouldRunAfter startServer
stopServer.mustRunAfter gatlingw