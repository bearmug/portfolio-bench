task testCommit(type: Test, description: 'Run commit test pack') {
    classpath = sourceSets.test.runtimeClasspath
}

task testAcceptance(type: Test, description: 'Run acceptance test pack') {
    classpath = sourceSets.testAcceptance.runtimeClasspath
}

task testPerformance(type: Test, description: 'Run performance test pack') {
    classpath = sourceSets.testPerformance.runtimeClasspath
}

task report(type: Copy, description: 'Publish tests report to web server') {
    from "$buildDir/reports"
    into "$reportsTargetDir"
}

def mode = "Boot"

gatling {
    toolVersion = '2.2.5'
    jvmArgs = [ '-server', '-Xms256M', '-Xmx256M' ]
    simulations = {
        include "**/${mode}Simulation*"
    }
}

task gatlingQbit(dependsOn: 'gatlingRun') {
    doLast {
        println 'Running gatling qbit wrapper task'
    }
}

task gatlingBoot(dependsOn: 'gatlingRun') {
    doLast {
        println 'Running gatling qbit wrapper task'
    }
}

task simulationQbit(dependsOn: ['startQbit', 'gatlingQbit', 'stopQbit'])
task simulationBoot(dependsOn: ['startBoot', 'gatlingBoot', 'stopBoot'])

gatlingQbit.shouldRunAfter startQbit
stopQbit.mustRunAfter gatlingQbit

gatlingBoot.shouldRunAfter startBoot
stopBoot.mustRunAfter gatlingBoot